<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppDocumentUsersHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate(object $document, array $data, array $hints = array()): array
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['firstName']) || (! empty($this->class->fieldMappings['firstName']['nullable']) && array_key_exists('firstName', $data))) {
            $value = $data['firstName'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['firstName']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['firstName']->setValue($document, $return);
            $hydratedData['firstName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['lastName']) || (! empty($this->class->fieldMappings['lastName']['nullable']) && array_key_exists('lastName', $data))) {
            $value = $data['lastName'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['lastName']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['lastName']->setValue($document, $return);
            $hydratedData['lastName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['city']) || (! empty($this->class->fieldMappings['city']['nullable']) && array_key_exists('city', $data))) {
            $value = $data['city'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['city']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['city']->setValue($document, $return);
            $hydratedData['city'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['dateNaissance'])) {
            $value = $data['dateNaissance'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['dateNaissance']->setValue($document, clone $return);
            $hydratedData['dateNaissance'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email']) || (! empty($this->class->fieldMappings['email']['nullable']) && array_key_exists('email', $data))) {
            $value = $data['email'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['email']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['password']) || (! empty($this->class->fieldMappings['password']['nullable']) && array_key_exists('password', $data))) {
            $value = $data['password'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['password']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['password']->setValue($document, $return);
            $hydratedData['password'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['passwordConfirmation']) || (! empty($this->class->fieldMappings['passwordConfirmation']['nullable']) && array_key_exists('passwordConfirmation', $data))) {
            $value = $data['passwordConfirmation'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['passwordConfirmation']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['passwordConfirmation']->setValue($document, $return);
            $hydratedData['passwordConfirmation'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['profilPicture']) || (! empty($this->class->fieldMappings['profilPicture']['nullable']) && array_key_exists('profilPicture', $data))) {
            $value = $data['profilPicture'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['profilPicture']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['profilPicture']->setValue($document, $return);
            $hydratedData['profilPicture'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['role']) || (! empty($this->class->fieldMappings['role']['nullable']) && array_key_exists('role', $data))) {
            $value = $data['role'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['role']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['role']->setValue($document, $return);
            $hydratedData['role'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['pseudo']) || (! empty($this->class->fieldMappings['pseudo']['nullable']) && array_key_exists('pseudo', $data))) {
            $value = $data['pseudo'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['pseudo']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['pseudo']->setValue($document, $return);
            $hydratedData['pseudo'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['tagsByCategory']) || (! empty($this->class->fieldMappings['tagsByCategory']['nullable']) && array_key_exists('tagsByCategory', $data))) {
            $value = $data['tagsByCategory'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['tagsByCategory']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['tagsByCategory']->setValue($document, $return);
            $hydratedData['tagsByCategory'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['filled']) || (! empty($this->class->fieldMappings['filled']['nullable']) && array_key_exists('filled', $data))) {
            $value = $data['filled'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['filled']['type'];
                $return = (bool) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['filled']->setValue($document, $return);
            $hydratedData['filled'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['userTags']) || (! empty($this->class->fieldMappings['userTags']['nullable']) && array_key_exists('userTags', $data))) {
            $value = $data['userTags'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['userTags']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['userTags']->setValue($document, $return);
            $hydratedData['userTags'] = $return;
        }
        return $hydratedData;
    }
}